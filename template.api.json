{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "existingVnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the VNET to add a subnet to"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "metadata": {
                "description": "Name of the subnet to add"
            }
        },
        "subnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Address space of the subnet to add"
            }
        },
        "vmSku": {
            "type": "string",
            "defaultValue": "Standard_A1"
        },
        "instanceCount": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 100
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "16.04-LTS",
            "allowedValues": [
                "14.04.4-LTS",
                "16.04-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 15.10, 14.04.4-LTS."
            }
        },
        "administratorLogin": {
            "type": "string"
        },
        "administratorLoginPassword": {
            "type": "string"
        },
        "databaseName": {
            "type": "string"
        },
        "collation": {
            "type": "string",
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
        },
        "edition": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ]
        },
        "maxSizeBytes": {
            "type": "string",
            "defaultValue": "1073741824"
        },
        "requestedServiceObjectiveName": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2",
                "P1",
                "P2",
                "P3"
            ],
            "metadata": {
                "description": "Describes the performance level for Edition"
            }
        }
    },
    "variables": {
        "namingInfix": "[toLower(substring(concat(variables('scaleSetName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "subnetName": "[concat(parameters('subnetPrefix'), '-subnet')]",
        "subnetFullName": "[concat(parameters('existingVnetName'), '/', variables('subnetName'))]",
        "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), variables('subnetName'))]",
        "sqlServerName": "[concat(parameters('subnetPrefix'), '-sqlserver', uniqueString(resourceGroup().id))]",
        "sqlServerDisplayName": "[concat(parameters('subnetPrefix'), '-sqlserver')]",
        "loadBalancerName": "[concat(parameters('subnetPrefix'), '-lb')]",
        "scaleSetName": "[concat(parameters('subnetPrefix'), '-scale-set')]",
        "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
        "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
        "osType": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
        },
        "imageReference": "[variables('osType')]"
    },
    "resources": [
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[variables('subnetFullName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressPrefix": "[parameters('subnetAddressPrefix')]"
            }
        },
        {
            "name": "[variables('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('sqlServerDisplayName')]"
            },
            "apiVersion": "2014-04-01",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
            },
            "resources": [
                {
                    "name": "[parameters('databaseName')]",
                    "type": "databases",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "Database"
                    },
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "properties": {
                        "edition": "[parameters('edition')]",
                        "collation": "[parameters('collation')]",
                        "maxSizeBytes": "[parameters('maxSizeBytes')]",
                        "requestedServiceObjectiveName": "[parameters('requestedServiceObjectiveName')]"
                    }
                },
                {
                    "type": "firewallRules",
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-10-01",
            "name": "[variables('loadBalancerName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), variables('subnetName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetResourceId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('bePoolName')]"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('natPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": "50000",
                            "frontendPortRangeEnd": "50119",
                            "backendPort": "3389"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('scaleSetName')]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
            ],
            "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "[parameters('instanceCount')]"
            },
            "properties": {
                "overprovision": true,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        },
                        "imageReference": "[variables('imageReference')]"
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('administratorLogin')]",
                        "adminPassword": "[parameters('administratorLoginPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('scaleSetName'), 'Nic')]",
                                "properties": {
                                    "primary": "true",
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('scaleSetName'), 'IpConfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('subnetResourceId')]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "outputs": {
        "ServerNameParam": {
            "type": "string",
            "value": "[variables('sqlServerName')]"
        },
        "ServerResourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
        },
        "ServerObject": {
            "type": "object",
            "value": "[reference(variables('sqlServerName'))]"
        },
        "SqlServerURL": {
            "type": "string",
            "value": "[reference(variables('sqlServerName')).fullyQualifiedDomainName]"
        },
        "DbResourceID": {
            "type": "string",
            "value": "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), parameters('databaseName'))]"
        },
        "DbObject": {
            "type": "object",
            "value": "[reference(parameters('databaseName'))]"
        },
        "DbAdoConnString": {
            "type": "string",
            "value": "[concat('Server=tcp:',reference(variables('sqlServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',parameters('databaseName'),';Persist Security Info=False;User ID=',reference(variables('sqlServerName')).administratorLogin,';Password=',reference(variables('sqlServerName')).administratorLoginPassword,';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
        }
    }
}